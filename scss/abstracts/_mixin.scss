@use './function' as fun;
@use './variables/extras' as ex;

//border for debugging
@mixin test {
  border: 1px solid red;
}
//border for dubugging

//responsive mixin
@mixin respond-to($breakpoint) {
  $raw-query: map-get(ex.$breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

//placing elements center
@mixin center {
  display: inline-grid;
  place-items: center;
}

//sizing elements in squre
@mixin square-size($size) {
  height: $size;
  width: $size;
}
//light transition
@mixin basic-transition {
  transition: transform 250ms ease-in-out;
}
//color based on background color
@mixin dynamicColor($color) {
  background-color: $color;
  color: fun.color($color);
}
// mixin for font adding 
@mixin font($font){
  font-family: $font;
}
